// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    id        String       @id @default(uuid())
    name      String
    email     String       @unique
    password  String
    profile   String
    createdAt DateTime     @default(now())
    updatedAt DateTime     @updatedAt
    posts     Post[]
    comments  Commentary[]
}

model Post {
    id     String @id @default(uuid())
    userId String

    title        String
    description  String
    thumbnailUrl String?
    createdAt    DateTime @default(now())
    updatedAt    DateTime @updatedAt

    user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
    commentaries Commentary[]
    editHistory  PostHistory[]
    metadata     PostMetadata?
}

model PostMetadata {
    id           String @id @default(uuid())
    postId       String @unique
    viewCount    Int    @default(0)
    likeCount    Int    @default(0)
    dislikeCount Int    @default(0)

    post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model PostHistory {
    id          String @id @default(uuid())
    postId      String
    title       String
    description String

    post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Commentary {
    id          String   @id @default(uuid())
    userId      String
    postId      String
    description String
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    user           User                @relation(fields: [userId], references: [id], onDelete: Cascade)
    post           Post                @relation(fields: [postId], references: [id], onDelete: Cascade)
    CommentHistory CommentaryHistory[]
}

model CommentaryHistory {
    id           String   @id @default(uuid())
    commentaryId String
    description  String
    createdAt    DateTime @default(now())

    comment Commentary @relation(fields: [commentaryId], references: [id], onDelete: Cascade)
}
